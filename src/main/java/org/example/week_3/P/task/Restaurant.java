package org.example.week_3.P.task;

import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;

public class Restaurant {
    public static void main(String[] args) {

        int timeWorkRestaurant = 20000;
        BlockingQueue<Order> queue = new LinkedBlockingQueue<>(2); // –û—á–µ—Ä–µ–¥—å –∑–∞–∫–∞–∑–æ–≤

        System.out.println("–†–µ—Å—Ç–æ—Ä–∞–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç " + Math.round((float)(timeWorkRestaurant) / 1000) + "—Å!");
        synchronized (queue){

            // –°–æ–∑–¥–∞–µ–º –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–æ–≤
            Waiter waiter1 = new Waiter(1, queue);
            Waiter waiter2 = new Waiter(2, queue);

            // –°–æ–∑–¥–∞–µ–º –ø–æ–≤–∞—Ä–æ–≤
            Chef chef1 = new Chef(1, queue);
            Chef chef2 = new Chef(2, queue);

            // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫–∏
            waiter1.start();
            // waiter2.start();
            chef1.start();
            chef2.start();

            try{
                Thread.sleep(timeWorkRestaurant);
            }catch (InterruptedException e){
                System.out.println(e.getMessage());
            }


            // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—É (–Ω–µ –∏–¥–µ–∞–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–±, –Ω–æ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ –ø–æ–¥–æ–π–¥–µ—Ç)
            waiter1.interrupt();
            waiter2.interrupt();
            chef1.interrupt();
            chef2.interrupt();
            System.out.println("üèÅ –†–µ—Å—Ç–æ—Ä–∞–Ω –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è!");

        }

    }
}